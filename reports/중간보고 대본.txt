# 1
안녕하십니까 공공자전거 대여 및 반납량 예측 발표를 맡은 1조 전웅입니다.

# 2
발표는 분석 개요, 분석 진행, 분석 결과, 추후 방향 순으로 진행하겠습니다.

# 3
첫 번째로 분석 개요입니다.

# 4
저희는 모든 개별 대여소의 대여 및 반납량을 예측하려고 했습니다. 
하지만 문제가 있습니다. 여기 보이는 사진은 전체 따릉이 대여소입니다. 약 3,000개의 대여소가 있고 이에 대해 각각 모델을 만드려면 3,000개의 모델을 만들어야합니다. 너무 많은 시간과 노력이 들어 사실상 불가능하다고 생각합니다.

# 5
이 문제점에 대해서 저희는 개별 대여소를 구 단위 데이터 또는 동 단위 데이터로 예측할 수 있지 않을까? 하고 생각했습니다.
이렇게 분석했을 때의 장점은 필요한 모델의 수를 줄일 수 있다는 것입니다. 광진구를 예로 들면, 광진구 내에 위치하는 모든 개별 대여소 모델을 만든다면 89개의 모델이 필요하고, 동 단위로 만든다면 15개의 모델만 필요하고, 구 단위 모델은 1개의 모델만 필요합니다. 이처럼 단위가 커질수록 필요한 모델의 수가 현저히 적어지는 것을 알 수 있습니다.

# 6
구와 동 단위로 모델을 만들었을 때 모델의 수가 적어지는 장점이 존재하지만, 모델 성능이 어떻게 나올진 알 수 없습니다.
그래서 저희가 구상한 모델별 성능 비교과정에 대해 자세히 설명하겠습니다.
표의 예시는 광진구, 화양동, 화양동 내에 있는 모든 개별 대여소입니다. 화양동 내에 위치하는 개별 대여소는 다음과 같이 총 11개 있습니다. 동일한 비교를 하기 위해서 저희는 구, 동, 개별 모델의 데이터 개수를 통일하였습니다.
학습 데이터 수는 약 7,000개, 테스트 데이터는 약 1,700개로 개별 모델을 기준으로 통일하였습니다.
광진구, 화양동, 개별 대여소로 모델을 만들고 각 대여소의 테스트 데이터로 테스트하는 것입니다.
각 대여소마다 mse가 나오고 이 값을 평균내어 비교하는 방식을 사용할 것입니다.

# 7
다음은 저희가 실제로 분석한 내용입니다.

# 8
모델링에 들어가기 앞서 변수 삭제와 변수 추가에 대해 얘기하겠습니다.
저희가 이전에 추가하려고 했던 문화행사 변수는 부정확한 데이터가 많아 삭제하였습니다. 보이는 것처럼 기간도 부정확하고 공연시설의 위치 또한 부정확하여 데이터와 결합하기 어려운 점이 많아 삭제하였습니다. 

# 9
다음으론 변수 추가입니다. 대중교통 승객 수, 학생 수 변수를 추가하였습니다.

# 10
저희가 분석한 데이터는 광진구 내에 존재하는 개별 대여소, 자양3동 내에 존재하는 개별 대여소, 뚝섬 대여소입니다. 

# 11
이제부터 모델링 과정입니다. 저희가 사용할 모델은 elastic net, random forest, xgboost 3가지입니다. 
여기서 저희가 어떻게 하이퍼 파라미터 범위를 잡았는지 설명하겠습니다.
elastic net은 모델을 돌리는 데 시간이 얼마 걸리지 않아 하이퍼 파라미터 범위를 자유롭게 설정할 수 있지만, random forest와 xgboost는 모델 수행시간이 길어 하이퍼 파라미터 범위를 정하기 까다로웠습니다. 하지만 두 모델을 자세히 보니 bagging을 이용한다는 공통점이 있습니다. 저희는 이 부분을 활용하여 한 가지 아이디어를 냈습니다. 전체 데이터를 충분한 값으로 학습시킨 후 Out of bag error를 보고 감소폭이 매우 줄어드는 값을 상한으로 잡는 방법입니다.
화면을 보고 설명하겠습니다.
왼쪽은 random forest입니다. 트리의 개수가 증가함에 따라 OOB는 감소하고 있습니다. 하지만, 300이상부터는 감소하는 폭이 매우 작습니다. 따라서 저희는 트리의 개수 범위를 100~300으로 잡습니다. 오른쪽은 xgboost입니다. iteration이 증가함에 따라 OOB는 감소하고 있습니다. 하지만, 1000이상부터는 감소하는 폭이 매우 작습니다. 그래서 저희는 반복횟수 범위를 500~1000으로 잡았습니다.

# 12
다음은 모델별 하이퍼 파라미터에 따라 error가 어떻게 변하는지 보겠습니다.
빨간색 점은 validation, 파란색 점은 train입니다. X축은 하이퍼 파라미터 범위이고, Y축은 error의 평균값입니다.
먼저 elastic net입니다. 그래프를 보면 alpha가 작을수록, lambda가 작을수록 error가 작아지는 것을 볼 수 있습니다.

# 13
random forest입니다. 그래프를 보면 mtry 선택하는 변수의 개수가 많을수록, ntree 트리의 개수가 많을수록 error가 작아지는 것을 볼 수 있습니다.

# 14
xgboost입니다. 그래프를 보면 eta가 커질수록, max depth가 커질수록, nrounds 반복횟수가 커질수록 error가 작아지는 것을 볼 수 있습니다.

# 15
다음은 최적의 하이퍼 파라미터 선택 과정입니다.
저희는 validation error가 가장 작은 하이퍼 파라미터 조합을 선택했습니다.
신기하게도 elastic net은 alpha가 1일 때, lambda는 약 0.006일때 validation error가 최소가 되어 선택하였습니다. 

# 16
random forest는 ntree는 100, mtry는 5로 선택하였습니다. 

# 17
xgboost는 nrounds는 1000, max depth는 6, eta = 0.1으로 선택하였습니다. 이 작업을 구, 동, 개별 모델로 똑같이 수행하였습니다.

# 18
다음은 최적의 하이퍼파라미터를 바탕으로 만든 모델의 결과를 보겠습니다.

# 19
모델별 test mse를 보겠습니다. 먼저 elastic net 결과입니다. 대략 30정도의 mse가 나왔고, 개별 모델의 mse 중앙값이 가장 낮은 것을 볼 수 있습니다.

# 20
random forest 결과입니다. 대략 9정도의 mse가 나왔고, 동 모델의 mse 중앙값이 가장 낮은 것을 볼 수 있습니다.

# 21
xgboost 결과입니다. 대략 20정도의 mse가 나왔고, 동 모델의 mse 중앙값이 가장 낮은 것을 볼 수 있습니다.

# 22
대여소 단위로 결과를 살펴보겠습니다. 모델 성능을 보면 random forest가 가장 성능이 좋고, elastic net이 성능이 가장 안 좋은 것을 알 수 있습니다.

# 23
최종적으로 보면 동 데이터 기반으로한 random forest모델의 성능이 가장 좋습니다.

# 24
다음은 추후 진행 방향입니다.

# 25
앞에서 뚝섬 유원지와 자양3동에 대해 분석했지만, 이 장소보다는 저희에게 조금 더 친숙한 바로 여기 화양동으로 분석 장소를 변경할 예정입니다. 분석 틀은 유지한채 데이터만 바뀌므로 크게 달라지는 것은 없습니다.

# 30
시간관계상 서울시 모든 대여소를 분석하는 것은 무리라고 판단하여 광진구, 화양동, 화양동 내에 위치하는 개별 대여소를 분석할 예정입니다. 

# 31
또한, 기존 변수를 이용하여 요일, 주말 여부 등 변수 추가를 고려할 것이고, 정비센터로 가는 등 이상치를 제거한 데이터와 제거하지 않은 데이터로 케이스를 나누어 분석할 예정입니다.
분석 한계점은 시간 관계상 서울시 모든 대여소를 모델링하지 못하고 광진구, 화양동 내에서 분석을 그쳤다는 점입니다.

# 32
이상으로 공공자전거 대여 및 반납량 예측 발표를 마치겠습니다.
감사합니다.